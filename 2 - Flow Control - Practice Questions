Q:1. What are the two values of the Boolean data type? How do you write them?

True and False, written with a Capital


Q:2. What are the three Boolean operators?

AND, OR, NOT


Q:3. Write out the truth tables of each Boolean operator (that is, every possible combination of Boolean values for the operator and what they evaluate to).

True and True = True
True and False = False
False and True = False
False and False = False

True or True = True
True or False = False
False or True = True
False or False = False

not True = False
not False = True


Q:4. What do the following expressions evaluate to?

(5 > 4) and (3 == 5)  =False
not (5 > 4)   = False
(5 > 4) or (3 == 5)   =True
not ((5 > 4) or (3 == 5))   =False
(True and True) and (True == False)   =False
(not False) or (not True)   =True


Q:5. What are the six comparison operators?
==, !=, <, >, >=, <=


Q:6. What is the difference between the equal to operator and the assignment operator?

== compares values, including deducted values.
= is not a comparison operator it assignes a value to a variable.


Q:7. Explain what a condition is and where you would use one.

Conditions are expressions that evaluate down to a Boolean value (True or False(=), with a flow control statement deciding what to do based on the outcome.


Q8:Identify the three blocks in this code:

The block starts with the first if statement, then the second is a new block and the else is a block.
             spam = 0
Block1:      if spam == 10:
Block2:         print('eggs')
                if spam > 5:
                  print('bacon')
                else:
Block3:           print('ham')
              print('spam')
          print('spam')
          
          
Q:9. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.

import random 
spam = random.randint(1,4)
if spam == 1:
    print('Hello')
elif spam == 2:
    print('Howdy')
else:
    print('Greetings')
print(spam)


Q:10. What can you press if your program is stuck in an infinite loop?

CTRL+C


Q:11. What is the difference between break and continue?

- A break is a statement that will break free from an infinite loop if the condition of the loop is met.
- A continue statement always jumps back to the start of the loop enabling it to re-evaluated the condition of the loop,
progressing past it only when the condition is met, usually to another 'if' statement.


Q:12 What is the difference between range(10), range(0, 10), and range(0, 10, 1) in a for loop?

range(10) has a range of 10 items
range(0,10) has a range 0f 9 items starting from 0 and going up to 9, so not including 10.
range(0,10,1) has a range of 9 items from 0 to 9, again not including 10, and in increments of 1.


Q:13. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop.

#1
for i in range(1,11):
    print(i)
    
#2
range = 0
while range != 10:
        range += 1
        print(range)
        
        
Q:14. If you had a function named bacon() inside a module named spam, how would you call it after importing spam?

spam.bacon()


EXTRA CREDIT:
# Round()
Round() will round a number up or down, or can additionally round to a set number of decimal places
e.g. Round(6.78909, 2) would round to 6.79

# abs()
