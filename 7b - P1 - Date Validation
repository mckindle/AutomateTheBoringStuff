import re, pyperclip

dateRegex = re.compile(r'''(
    (3[01]|[12][0-9]|0?[1-9])   # day
    ([/.,:\s]{1}|\_{1}|\s{1}|\-{1})                # special characters
    ([1][0-2]|0?[1-9])          # month
    ([/.,:\s]{1}|\_{1}|\s{1}|\-{1})                 # special characters
    ([12]\d{3}|[0-9]{2})       # year
    )''', re.VERBOSE | re.I)

# Find matches in clipboard text.
text = str(pyperclip.paste())
matches = []

# I made lists of months that either end in odd numbers (excl Feb, aka the 31s), even numbers (excl Feb, aka the 30s ex), and leapMonths (February)
oddMonths = [1,3,5,7,8,10,12]
evenMonths = [4,6,9,11]
leapMonths = [2]

for groups in dateRegex.findall(text):
    #I'm basically saying if the month is in the list that should have 31 days I need to check the date is from 1 to 31 and so on.
    if int(groups[3]) in oddMonths and int(groups[1]) in range(1,32):
            theDate = '/'.join([groups[1], groups[3], groups[5]])
            matches.append(theDate)
    #same again, but comparing the even ending months to make sure in the range of 1 to 30
    elif int(groups[3]) in evenMonths and int(groups[1]) in range(1,31):
            theDate = '/'.join([groups[1], groups[3], groups[5]])
            matches.append(theDate)
    # however for leapMonths I am saying the date can be between 1 and 29, but made no effort to validate if the year is a valid leapmonth year
    elif int(groups[3]) in leapMonths and int(groups[1]) in range(1,30):
            theDate = '/'.join([groups[1], groups[3], groups[5]])
            matches.append(theDate)
    
# Copy results to the clipboard.
if len(matches) > 0:
    pyperclip.copy('\n'.join(matches))
    print('Copied to clipboard:')
    print('\n'.join(matches))
else:
    print('No dates found.')
